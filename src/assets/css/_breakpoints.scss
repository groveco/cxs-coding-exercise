/**
 * Below are the definitions of MINIMUM widths for each breakpoint.
 *
 * We work with the following breakpoints, small, medium, large, and xLarge.
 * These breakpoints work as cascading breakpoints assuming everything we build is mobile-first.
 *
 * IMPORTANT: This has an analog in `constants/breakpoints.js` which needs to mirror
 * these values.
 */
$breakpoint-small: 440px;
$breakpoint-medium: 800px;
$breakpoint-large: 1260px;
$breakpoint-xLarge: 1660px;

/// Constructs a breakpoint that applies for any width in the xSmall range and below.
/// You should likely avoid using this as it goes against the principle of using
/// cascading breakpoints. Rarely is this necessary in mobile first design.
/// @access public
@mixin for-xsmall-down {
  @media only screen and (max-width: $breakpoint-small) {
    @content;
  }
}

/// Constructs a breakpoint that applies for any width in the small range and below.
/// You should likely avoid using this as it goes against the principle of using
/// cascading breakpoints. Rarely is this necessary in mobile-first designs.
/// @access public
@mixin for-small-down {
  @media only screen and (max-width: $breakpoint-medium) {
    @content;
  }
}

/// Constructs a breakpoint that applies for any width in the small range and above.
/// @access public
@mixin for-small-up {
  @media only screen and (min-width: $breakpoint-small) {
    @content;
  }
}

/// Constructs a breakpoint that applies for any width in the medium range and above.
/// @access public
@mixin for-medium-up {
  @media only screen and (min-width: $breakpoint-medium) {
    @content;
  }
}

/// Constructs a breakpoint that applies for any width in the large range and above.
/// @access public
@mixin for-large-up {
  @media only screen and (min-width: $breakpoint-large) {
    @content;
  }
}

/// Constructs a breakpoint that applies for any width in the xLarge range and above.
/// @access public
@mixin for-xlarge-up {
  @media only screen and (min-width: $breakpoint-xLarge) {
    @content;
  }
}
